/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4/samples
 */
plugins {
    id 'java'
    id 'maven-publish'
//    id "org.jetbrains.kotlin.jvm" version "1.6.21"
}




configurations {
    triImplementation
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {


    //This is compile-time dependency only, the implementation jar will be available on the server
    compileOnly 'in.vadlakonda.equilibrium:tri-husk:1.0'
    compileOnly 'log4j:log4j:1.2.16'

    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'org.apache.commons:commons-lang3:3.12.0'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'log4j:log4j:1.2.16'
    testImplementation "org.mockito:mockito-core:1.+"
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.2'




    /*
    implementation 'org.jetbrains.kotlin:kotlin-script-runtime:1.6.21'
    implementation 'org.jetbrains.kotlin:kotlin-script-util:1.6.21'
    runtimeOnly 'org.jetbrains.kotlin:kotlin-compiler-embeddable:1.6.21'

    dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-script-util:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-scripting-jvm-host-embeddable:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-scripting-jvm-host:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-scripting-jvm:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-scripting-jsr223-embeddable:${rootProject.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-scripting-jsr223:${rootProject.kotlinVersion}"
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    }

     */
}

test {
    useJUnitPlatform()
}





task singleJar(type: Jar) {
    group = "build"

//    archiveFileName 'kvadlakonda-tri-record-core.jar'

    manifest {
        attributes(
//                'Main-Class': 'in.vadlakonda.tri.entity.MainTest'

                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
//                'Build-Revision' : versioning.info.commit,
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }

    dependsOn configurations.triImplementation

//    baseName = 'all-in-one-jar'
    from { configurations.triImplementation.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'in.vadlakonda.equilibrium'
            artifactId = 'equilibrium-core'
            version = '1.0'
            from components.java
        }
    }
}





task printEnvironmentVariables {

    doFirst {

        println "*** ENVIRONMENT VARIABLE DUMP ***"

        System.getenv().each { k, v -> println "${k}:${v}" }

    }

}

//build.dependsOn printEnvironmentVariables